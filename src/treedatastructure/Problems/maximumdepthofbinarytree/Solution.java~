package src.treedatastructure.Problems.maximumdepthofbinarytree;

import src.treedatastructure.Problems.levelordertraversal.Solution.TreeNode;

import java.util.LinkedList;
import java.util.Queue;

public class Solution {

    public int maxDepth(TreeNode root) {
     if(root == null ) return 0;
     return bfsMaxDepth(root);
          }

    private int bfsMaxDepth(TreeNode root){
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int level=0;
        while (!queue.isEmpty()){
            int size =0;
            for(int i=0;i<size;i++){
                TreeNode treeNode = queue.poll();
                if(treeNode.left!=null) queue.add(treeNode.left);
                if(treeNode.right!=null) queue.add(treeNode.right);
            }
            level++;
        }
        return level;

    }
}
